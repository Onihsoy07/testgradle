<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.example.testgradle.repository.ProductRepositoryTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2023-03-29T14:22:45" hostname="DESKTOP-KHNG4LN" time="0.201">
  <properties/>
  <testcase name="queryTest1()" classname="com.example.testgradle.repository.ProductRepositoryTest" time="0.201"/>
  <system-out><![CDATA[23:22:41.800 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
23:22:41.807 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
23:22:41.827 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [com.example.testgradle.repository.ProductRepositoryTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
23:22:41.834 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.example.testgradle.repository.ProductRepositoryTest], using SpringBootContextLoader
23:22:41.836 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.example.testgradle.repository.ProductRepositoryTest]: class path resource [com/example/testgradle/repository/ProductRepositoryTest-context.xml] does not exist
23:22:41.837 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.example.testgradle.repository.ProductRepositoryTest]: class path resource [com/example/testgradle/repository/ProductRepositoryTestContext.groovy] does not exist
23:22:41.837 [Test worker] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.example.testgradle.repository.ProductRepositoryTest]: no resource found for suffixes {-context.xml, Context.groovy}.
23:22:41.838 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.example.testgradle.repository.ProductRepositoryTest]: ProductRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
23:22:41.863 [Test worker] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.example.testgradle.repository.ProductRepositoryTest]
23:22:41.897 [Test worker] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\JAVA\project\testgradle\build\classes\java\main\com\example\testgradle\TestgradleApplication.class]
23:22:41.897 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.example.testgradle.TestgradleApplication for test class com.example.testgradle.repository.ProductRepositoryTest
23:22:41.962 [Test worker] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [com.example.testgradle.repository.ProductRepositoryTest]: using defaults.
23:22:41.962 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
23:22:41.972 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5b69fd74, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@f325091, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@437e951d, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@77b325b3, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@63a5e46c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7e8e8651, org.springframework.test.context.transaction.TransactionalTestExecutionListener@49ef32e0, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@271f18d3, org.springframework.test.context.event.EventPublishingTestExecutionListener@6bd51ed8, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@61e3a1fd, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@51abf713, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@eadb475, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4d4d48a6, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@315df4bb, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3fc08eec]
23:22:41.974 [Test worker] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@e362c57 testClass = ProductRepositoryTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1c4ee95c testClass = ProductRepositoryTest, locations = '{}', classes = '{class com.example.testgradle.TestgradleApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@66ce957f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@7be58f16, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@11eadcba, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4bff1903, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@150ab4ed, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@479cbee5], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true]], class annotated with @DirtiesContext [false] with mode [null].

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v2.7.9)

23:22:42.208 [Test worker] INFO  c.e.t.r.ProductRepositoryTest - Starting ProductRepositoryTest using Java 11.0.18 on DESKTOP-KHNG4LN with PID 11504 (started by Higgs in D:\JAVA\project\testgradle)
23:22:42.209 [Test worker] INFO  c.e.t.r.ProductRepositoryTest - No active profile set, falling back to 1 default profile: "default"
23:22:42.215 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
23:22:42.709 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
23:22:42.746 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 32 ms. Found 4 JPA repository interfaces.
23:22:43.100 [Test worker] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
23:22:43.139 [Test worker] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.15.Final
23:22:43.251 [Test worker] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
23:22:43.321 [Test worker] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
23:22:43.440 [Test worker] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
23:22:43.459 [Test worker] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
23:22:43.670 [Test worker] INFO  org.hibernate.search.engine.Version - HSEARCH000034: Hibernate Search 5.11.1.Final
Hibernate: 
    
    drop table if exists product
Hibernate: 
    
    drop table if exists product_entity
Hibernate: 
    
    drop table if exists listener
Hibernate: 
    
    drop table if exists short_url
Hibernate: 
    
    create table product (
       id varchar(255) not null,
        created_at datetime,
        updated_at datetime,
        name varchar(255) not null,
        price integer not null,
        stock integer not null,
        primary key (id)
    ) engine=InnoDB
Hibernate: 
    
    create table product_entity (
       product_id varchar(255) not null,
        created_at datetime,
        updated_at datetime,
        product_name varchar(255) not null,
        product_price integer not null,
        product_stock integer not null,
        primary key (product_id)
    ) engine=InnoDB
Hibernate: 
    
    create table listener (
       id bigint not null auto_increment,
        name varchar(255),
        primary key (id)
    ) engine=InnoDB
Hibernate: 
    
    create table short_url (
       id bigint not null auto_increment,
        created_at datetime,
        updated_at datetime,
        hash varchar(255) not null,
        org_url varchar(255) not null,
        url varchar(255) not null,
        primary key (id)
    ) engine=InnoDB
Hibernate: 
    
    alter table short_url 
       add constraint UK_4q3sixjkhor1wgw9sh1esqe4v unique (hash)
Hibernate: 
    
    alter table short_url 
       add constraint UK_6f81t9wlwoep7nn2j0pval0ik unique (org_url)
Hibernate: 
    
    alter table short_url 
       add constraint UK_jmjjq8hvhcrndoyuvhg42fsmp unique (url)
23:22:44.033 [Test worker] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
23:22:44.085 [Test worker] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
23:22:44.464 [Test worker] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
23:22:44.642 [Test worker] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
23:22:45.082 [Test worker] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
23:22:45.096 [Test worker] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
23:22:45.112 [Test worker] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
23:22:45.193 [Test worker] INFO  c.e.t.r.ProductRepositoryTest - Started ProductRepositoryTest in 3.199 seconds (JVM running for 3.956)
23:22:45.213 [Test worker] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@e362c57 testClass = ProductRepositoryTest, testInstance = com.example.testgradle.repository.ProductRepositoryTest@485dfac9, testMethod = queryTest1@ProductRepositoryTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1c4ee95c testClass = ProductRepositoryTest, locations = '{}', classes = '{class com.example.testgradle.TestgradleApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@66ce957f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@7be58f16, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@11eadcba, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4bff1903, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@150ab4ed, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@479cbee5], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@7e113065]; rollback [true]
Hibernate: 
    select
        product0_.id as id1_0_0_,
        product0_.created_at as created_2_0_0_,
        product0_.updated_at as updated_3_0_0_,
        product0_.name as name4_0_0_,
        product0_.price as price5_0_0_,
        product0_.stock as stock6_0_0_ 
    from
        product product0_ 
    where
        product0_.id=?
Hibernate: 
    select
        product0_.id as id1_0_0_,
        product0_.created_at as created_2_0_0_,
        product0_.updated_at as updated_3_0_0_,
        product0_.name as name4_0_0_,
        product0_.price as price5_0_0_,
        product0_.stock as stock6_0_0_ 
    from
        product product0_ 
    where
        product0_.id=?
Hibernate: 
    select
        product0_.id as id1_0_0_,
        product0_.created_at as created_2_0_0_,
        product0_.updated_at as updated_3_0_0_,
        product0_.name as name4_0_0_,
        product0_.price as price5_0_0_,
        product0_.stock as stock6_0_0_ 
    from
        product product0_ 
    where
        product0_.id=?
Hibernate: 
    select
        product0_.id as id1_0_0_,
        product0_.created_at as created_2_0_0_,
        product0_.updated_at as updated_3_0_0_,
        product0_.name as name4_0_0_,
        product0_.price as price5_0_0_,
        product0_.stock as stock6_0_0_ 
    from
        product product0_ 
    where
        product0_.id=?
Hibernate: 
    select
        product0_.id as id1_0_0_,
        product0_.created_at as created_2_0_0_,
        product0_.updated_at as updated_3_0_0_,
        product0_.name as name4_0_0_,
        product0_.price as price5_0_0_,
        product0_.stock as stock6_0_0_ 
    from
        product product0_ 
    where
        product0_.id=?
Hibernate: 
    select
        product0_.id as id1_0_0_,
        product0_.created_at as created_2_0_0_,
        product0_.updated_at as updated_3_0_0_,
        product0_.name as name4_0_0_,
        product0_.price as price5_0_0_,
        product0_.stock as stock6_0_0_ 
    from
        product product0_ 
    where
        product0_.id=?
Hibernate: 
    select
        product0_.id as id1_0_0_,
        product0_.created_at as created_2_0_0_,
        product0_.updated_at as updated_3_0_0_,
        product0_.name as name4_0_0_,
        product0_.price as price5_0_0_,
        product0_.stock as stock6_0_0_ 
    from
        product product0_ 
    where
        product0_.id=?
Hibernate: 
    select
        product0_.id as id1_0_0_,
        product0_.created_at as created_2_0_0_,
        product0_.updated_at as updated_3_0_0_,
        product0_.name as name4_0_0_,
        product0_.price as price5_0_0_,
        product0_.stock as stock6_0_0_ 
    from
        product product0_ 
    where
        product0_.id=?
Hibernate: 
    select
        product0_.id as id1_0_0_,
        product0_.created_at as created_2_0_0_,
        product0_.updated_at as updated_3_0_0_,
        product0_.name as name4_0_0_,
        product0_.price as price5_0_0_,
        product0_.stock as stock6_0_0_ 
    from
        product product0_ 
    where
        product0_.id=?
Hibernate: 
    insert 
    into
        product
        (created_at, updated_at, name, price, stock, id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        product
        (created_at, updated_at, name, price, stock, id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        product
        (created_at, updated_at, name, price, stock, id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        product
        (created_at, updated_at, name, price, stock, id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        product
        (created_at, updated_at, name, price, stock, id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        product
        (created_at, updated_at, name, price, stock, id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        product
        (created_at, updated_at, name, price, stock, id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        product
        (created_at, updated_at, name, price, stock, id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        product
        (created_at, updated_at, name, price, stock, id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    update
        product 
    set
        updated_at=?,
        name=?,
        price=?,
        stock=? 
    where
        id=?
Hibernate: 
    select
        product0_.id as id1_0_,
        product0_.created_at as created_2_0_,
        product0_.updated_at as updated_3_0_,
        product0_.name as name4_0_,
        product0_.price as price5_0_,
        product0_.stock as stock6_0_ 
    from
        product product0_
====↓↓ Test Data ↓↓====
Product(id=1, name=상품1, price=2000, stock=3000)
Product(id=10, name=상품10, price=5100, stock=1700)
Product(id=2, name=상품4, price=1500, stock=200)
Product(id=4, name=상품4, price=4000, stock=3000)
Product(id=5, name=상품5, price=10000, stock=1500)
Product(id=6, name=상품6, price=10000, stock=1000)
Product(id=7, name=상품7, price=500, stock=10000)
Product(id=8, name=상품8, price=8500, stock=3500)
Product(id=9, name=상품9, price=1000, stock=2000)
====↑↑ Test Data ↑↑====
Hibernate: 
    select
        product0_.id as id1_0_,
        product0_.created_at as created_2_0_,
        product0_.updated_at as updated_3_0_,
        product0_.name as name4_0_,
        product0_.price as price5_0_,
        product0_.stock as stock6_0_ 
    from
        product product0_ 
    where
        product0_.price>2000
Product(id=10, name=상품10, price=5100, stock=1700)
Product(id=4, name=상품4, price=4000, stock=3000)
Product(id=5, name=상품5, price=10000, stock=1500)
Product(id=6, name=상품6, price=10000, stock=1000)
Product(id=8, name=상품8, price=8500, stock=3500)
23:22:45.403 [Test worker] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@e362c57 testClass = ProductRepositoryTest, testInstance = com.example.testgradle.repository.ProductRepositoryTest@485dfac9, testMethod = queryTest1@ProductRepositoryTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1c4ee95c testClass = ProductRepositoryTest, locations = '{}', classes = '{class com.example.testgradle.TestgradleApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@66ce957f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@7be58f16, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@11eadcba, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4bff1903, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@150ab4ed, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@479cbee5], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
]]></system-out>
  <system-err><![CDATA[Loading class `com.mysql.jdbc.Driver'. This is deprecated. The new driver class is `com.mysql.cj.jdbc.Driver'. The driver is automatically registered via the SPI and manual loading of the driver class is generally unnecessary.
]]></system-err>
</testsuite>
